<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ml on Wonyoung&#39;s Tech Blog</title>
    <link>https://wonyoungseo.github.io/categories/ml/</link>
    <description>Recent content in ml on Wonyoung&#39;s Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Wonyoung Seo 2023</copyright>
    <lastBuildDate>Thu, 08 Feb 2024 14:17:49 +0900</lastBuildDate><atom:link href="https://wonyoungseo.github.io/categories/ml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[KR] Kubeflow - 개념 정리</title>
      <link>https://wonyoungseo.github.io/posts/2024-02-08-kubeflow-concept/</link>
      <pubDate>Thu, 08 Feb 2024 14:17:49 +0900</pubDate>
      
      <guid>https://wonyoungseo.github.io/posts/2024-02-08-kubeflow-concept/</guid>
      <description>KubeFlow  쿠버네티스 기반 ML 워크플로우를 구축, 실행, 관리하기 위한 오픈소스 플랫폼 모델 개발과 배포를 위한 E2E 솔루션 제공 확장성과 유연성을 가지고, 다양한 머신러닝 프레임워크 통합 가능  기능적 특징
 Distributed Training Pipeline Model Serving Model Management Jupyter Notebook Integration Metadata Store  활용 예시
 분산모델 트레이닝  대규모 데이터셋을 다루는 복잡한 머신러닝 모델을 분산환경에서 트레이닝   모델 서빙 및 배포  학습된 모델을 쿠버네티스 클러스터에 배포 효율적 리소스 관리 스케일링 통해 모델 서빙 최적화    1.</description>
    </item>
    
    <item>
      <title>[KR] Feature Store 의 개념</title>
      <link>https://wonyoungseo.github.io/posts/2023-03-26-introduction-feature-store/</link>
      <pubDate>Sun, 26 Mar 2023 22:44:57 +0900</pubDate>
      
      <guid>https://wonyoungseo.github.io/posts/2023-03-26-introduction-feature-store/</guid>
      <description>MLOps 시스템에서 Feature Store는 빠지지 않는 구성 요소 중 하나이다. 하지만 여타 다른 구성요소들과는 달리 한번에 이해가 잘 되지 않아, 이번 기회에 개념을 정리해본다.
Feature Store는 무엇인가? Feature Store는 머신러닝 모델 또는 데이터사이언스 프로젝트에 사용되는 Feature를 저장, 관리, 제공하는 중앙저장소 역할을 수행하기 위해 등장한 개념이다. Feature Store가 있음으로서 여러가지 모델에 사용되는 반복적인 Feature Engineering 작업을 줄이고, Feature들을 관리하고 추적할 수 있다.
Feature Store는 왜 필요한가? 개인적으로 처음에는 잘 와닿지 않았다. 아마도 실무를 하던 각각의 ML엔지니어, 데이터사이언티스트들이 각자 담당하던 모델의 실험과 서비스의 PoC 단계의 업무만 해와서 그럴 수도 있었다.</description>
    </item>
    
    <item>
      <title>[KR] ML Version Control 의 개념</title>
      <link>https://wonyoungseo.github.io/posts/2022-09-04-introduction-data-version-control/</link>
      <pubDate>Sun, 04 Sep 2022 22:47:00 +0900</pubDate>
      
      <guid>https://wonyoungseo.github.io/posts/2022-09-04-introduction-data-version-control/</guid>
      <description>사내에서 데이터 버전 관리에 대한 내용을 소개하면서 정리한 내용을 포스팅으로 재정리 해보았습니다.
1. 버전관리 1.1. 소프트웨어 엔지니어링에서 관점에서의 버전 관리 이제는 Git으로 익숙하게 접하는 버전 관리(version control)이 하는 역할을 소프트웨어 엔지니어링 관점에서 다시 한번 정리해보자면 다음과 같다.
 소프트웨어를 이루는 코드와 패키지, 라이브러리 등에 생긴 변화를 추적하고 관리하기 위한 용도 여러 구성원이 소프트웨어를 개발할 때 발생하는 혼란을 줄이고, 효율적으로 협업할 수 있게 하는 용도 소프트웨어에 큰 문제가 발생했을 때, 빠르게 이전 버전으로 돌아가는 등, 에러나 실수로 인해 발생하는 손해를 최소화 하기 위한 용도  1.</description>
    </item>
    
    <item>
      <title>[KR] 머신러닝 추론 시스템 패턴</title>
      <link>https://wonyoungseo.github.io/posts/2022-07-22-inference-system-pattern/</link>
      <pubDate>Fri, 22 Jul 2022 21:10:24 +0900</pubDate>
      
      <guid>https://wonyoungseo.github.io/posts/2022-07-22-inference-system-pattern/</guid>
      <description>0. 머신러닝 추론 시스템이란 최근 머신러닝 모델을 서비스하기 위한 파이프라인을 구축하는 프로젝트를 진행하게 되었다. 경험 없이 밑바닥에서부터 시작하는 입장이었기 때문에 프로젝트를 본격적으로 진행하기에 앞서 여러가지 케이스를 분석하고 참고하는 시간을 가져보았다. 그 과정의 일환으로, 이번 글에서는 머신러닝 파이프라인의 한 부분을 담당하는 추론 시스템(ML inference system)에 대해 간단히 정리해보았다.
머신러닝 추론 시스템은 학습된 머신러닝 모델을 불러와 실제 데이터에 대한 추론 결과를 사용자에게 제공하는 기능을 한다. 추론시스템은 누군가가 실제로 머신러닝 모델 프로덕트를 사용한다. 따라서, 머신러닝에서 우리가 익숙한 [데이터수집 -&amp;gt; 데이터정제 -&amp;gt; 모델링 -&amp;gt; 학습 -&amp;gt; 성능평가 -&amp;gt; 실험반복]의 패턴과는 확연히 다르며, 다양한 관점에서 고려해야할 부분들이 생긴다.</description>
    </item>
    
  </channel>
</rss>
